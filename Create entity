<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>模型建立</title>
    <script src="Cesium/Build/Cesium/Cesium.js"></script>
    <link rel="stylesheet" href="Cesium/Build/Cesium/Widgets/widgets.css">
</head>

<body>
    <div id="cesiumContainer" style="width: 900px; height:600px;"></div>
</body>
<script>
    //可以不看
    let viewerOptions = {
        animation: false,
        baseLayerPicker: false,
        fullscreenButton: true,
        vrButton: false,
        geocoder: true,
        homeButton: true,
        infoBox: true,
        sceneModePicker: true,
        timeline: false,
        navigationHelpButton: false,
        navigationInstructionsInitiallyVisible: false,
        scene3DOnly: false,
        shouldAnimate: true
    };
    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJmM2U3MGQxMC04YzFlLTQ3ZWEtYTlhNy02ZTliMTlkZmMzNzkiLCJpZCI6MjQ2NDgsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1ODU1NTQ1OTF9.Zw-KtDHixJ0yWFYE7WYPhgSwdwo8_fLAw3HJO_9l6-s';
    let viewer = new Cesium.Viewer('cesiumContainer', viewerOptions);
    viewer.imageryLayers.removeAll();
    
    
    //谷歌影像
    let ggMap_S = viewer.imageryLayers.addImageryProvider(new Cesium.UrlTemplateImageryProvider({
        url: 'http://www.google.cn/maps/vt?lyrs=s&x={x}&y={y}&z={z}'
    }));

    // let home = Cesium.Rectangle.fromDegrees(60, 3, 136, 60);
    // Cesium.Camera.DEFAULT_VIEW_RECTANGLE = home;
    // let camera = viewer.camera;
    // camera.flyHome();
    
    
    //实体创建部分
    let grayWall = viewer.entities.add({
        name: "Green wall from surface with outline",
        wall: {
            positions: Cesium.Cartesian3.fromDegreesArrayHeights([
                119.2190446205,
                34.6046628112,
                100.0,
                119.2174288210,
                34.6133699963,
                100.0,
                119.2172103762,
                34.6135387075,
                100.0,
                119.2078418035,
                34.6137008571,
                100.0,
                119.2098715234,
                34.6033888906,
                100.0,
                119.2190446205,
                34.6046628112,
                100.0,
            ]),
            material: Cesium.Color.GRAY.withAlpha(0.7),
            outline: true,
        },
    });


    let orangePolygon = viewer.entities.add({
        name: "Orange polygon with per-position heights and outline",
        polygon: {
            hierarchy: Cesium.Cartesian3.fromDegreesArrayHeights([
                119.2146452374,
                34.6072538964,
                40,
                119.2146757504,
                34.6070815763,
                40,
                119.2139538106,
                34.6069803201,
                40,
                119.2139003920,
                34.6071789870,
                40,
            ]),
            extrudedHeight: 0,
            perPositionHeight: true,
            material: Cesium.Color.ALICEBLUE,
            outline: true,
            outlineColor: Cesium.Color.BLACK,
        },
    });

    let orangePolygon2 = viewer.entities.add({
        name: "Orange polygon with per-position heights and outline",
        polygon: {
            hierarchy: Cesium.Cartesian3.fromDegreesArrayHeights([
                119.2145101835,
                34.6073849291,
                40,
                119.2145048830,
                34.6074578647,
                40,
                119.2145440351,
                34.6074557612,
                40,
                119.2145430257,
                34.6075308368,
                40,
                119.2144945126,
                34.6075445424,
                40,
                119.2144809375,
                34.6075861503,
                40,
                119.2138839874,
                34.6075492300,
                40,
                119.2138908335,
                34.6074907665,
                40,
                119.2138350305,
                34.6074789297,
                40,
                119.2138484485,
                34.6074124037,
                40,
                119.2139622756,
                34.6074148745,
                40,
                119.2140063192,
                34.6073401162,
                40,
            ]),
            extrudedHeight: 0,
            perPositionHeight: true,
            material: Cesium.Color.ALICEBLUE,
            outline: true,
            outlineColor: Cesium.Color.BLACK,
        },
    });
    let orangePolygon3 = viewer.entities.add({
        name: "Orange polygon with per-position heights and outline",
        polygon: {
            hierarchy: Cesium.Cartesian3.fromDegreesArrayHeights([
            119.2138484485,
            34.6074124037,
            25,
            119.2139573764,
            34.6074251437,
            25,
            119.2140184856,
            34.6071910269,
            25,
            119.2139003920,
            34.6071789870,
            25,
            ]),
            extrudedHeight: 35,
            perPositionHeight: true,
            material: Cesium.Color.ALICEBLUE,
            outline: true,
            outlineColor: Cesium.Color.BLACK,
        },
    });

    viewer.zoomTo(viewer.entities);
</script>

</html>
